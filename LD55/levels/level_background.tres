[gd_resource type="VisualShader" load_steps=5 format=3 uid="uid://brwt3fbsi11yx"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_g1hmp"]
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_g1hlm"]
source = 5

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_yx3rs"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_4yxuy"]
parameter_name = "Color"
default_value_enabled = true

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform vec4 Color : source_color = vec4(1.000000, 1.000000, 1.000000, 1.000000);



void fragment() {
// ColorParameter:6
	vec4 n_out6p0 = Color;


	vec4 n_out4p0;
// Texture2D:4
	n_out4p0 = texture(TEXTURE, UV);


// VectorOp:5
	vec4 n_out5p0 = n_out6p0 * n_out4p0;


// Output:0
	COLOR.rgb = vec3(n_out5p0.xyz);


}
"
graph_offset = Vector2(-171.81, -70.7442)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(540, 180)
nodes/fragment/3/node = SubResource("VisualShaderNodeInput_g1hmp")
nodes/fragment/3/position = Vector2(-200, 240)
nodes/fragment/4/node = SubResource("VisualShaderNodeTexture_g1hlm")
nodes/fragment/4/position = Vector2(100, 220)
nodes/fragment/5/node = SubResource("VisualShaderNodeVectorOp_yx3rs")
nodes/fragment/5/position = Vector2(380, 100)
nodes/fragment/6/node = SubResource("VisualShaderNodeColorParameter_4yxuy")
nodes/fragment/6/position = Vector2(80, 0)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 2, 4, 0, 5, 1, 5, 0, 0, 0, 6, 0, 5, 0)
